name: Kubernetes CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  CI: false

permissions:
  id-token: write
  contents: read

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      frontend_changed: ${{ steps.filter.outputs.frontend }}
      backend_changed: ${{ steps.filter.outputs.backend }}
    steps:
      - uses: actions/checkout@v3

      - name: Check changed files
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'backend/**'

  build-and-push:
    name: Build and Push Docker Images
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, backend]
    outputs:
      image_tag: ${{ steps.build-and-push.outputs.image }}
      service: ${{ matrix.service }}
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS ECR Details
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: "true"

      - name: Build and push Docker image
        id: build-and-push
        if: |
          (matrix.service == 'frontend' && needs.detect-changes.outputs.frontend_changed == 'true') ||
          (matrix.service == 'backend' && needs.detect-changes.outputs.backend_changed == 'true')
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          COMMIT: ${{ github.sha }}
        run: |
          IMAGE_TAG=${COMMIT::7}
          SERVICE="${{ matrix.service }}"
          echo "Building and pushing $SERVICE image with tag $IMAGE_TAG"

          DOCKERFILE_PATH="$SERVICE/Dockerfile"
          CONTEXT_DIR="$SERVICE"
          ECR_REPOSITORY="tn1/batch-exp/${SERVICE}"

          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f $DOCKERFILE_PATH $CONTEXT_DIR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> "$GITHUB_OUTPUT"
  update-helm-values:
    name: Update Helm Values
    needs: [build-and-push, detect-changes]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, backend]
    steps:
      - name: Set up SSH for private repo access
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.DEPLOYMENTS_WRITE }}

      - name: Clone deployments repo (specific branch)
        run: |
          BRANCH_NAME="automated-cluster-creation"
          git clone --depth=1 --branch $BRANCH_NAME git@github.com:alpenlabs/deployments.git deployments
          cd deployments
          git checkout $BRANCH_NAME

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

      - name: Update Docker image tag in Helm values
        if: |
          (matrix.service == needs.build-and-push.outputs.service && needs.build-and-push.outputs.image_tag != '')
        env:
          SERVICE: ${{ matrix.service }}
          SHORT_TAG: ${{ github.sha }}
        run: |
          SHORT_TAG=${SHORT_TAG::7}
          VALUES_FILE="deployments/clusters/temp6-testnet1-staging/values/strata-apps-values.yaml"

          if [[ "$SERVICE" == "frontend" ]]; then
            yq eval -i ".batchExpFe.image.tag = \"$SHORT_TAG\"" $VALUES_FILE
          elif [[ "$SERVICE" == "backend" ]]; then
            yq eval -i ".batchExpBe.image.tag = \"$SHORT_TAG\"" $VALUES_FILE
          fi

      - name: Commit and push changes
        if: |
          (matrix.service == 'frontend' && needs.detect-changes.outputs.frontend_changed == 'true') ||
          (matrix.service == 'backend' && needs.detect-changes.outputs.backend_changed == 'true')
        env:
          SERVICE: ${{ matrix.service }}
          SHORT_TAG: ${{ github.sha }}
        run: |
          SHORT_TAG=${SHORT_TAG::7}
          cd deployments
          git config user.name "github-actions-batch-exp"
          git config user.email "github-actions@github.com"

          if git diff --quiet; then
            echo "No changes to commit."
          else
            git add clusters/temp6-testnet1-staging/values/strata-apps-values.yaml
            git commit -m "Update $SERVICE image tag to $SHORT_TAG"
            git pull --rebase origin automated-cluster-creation
            git push origin automated-cluster-creation
          fi